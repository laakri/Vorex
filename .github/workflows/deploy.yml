name: Deploy to Azure VM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Cleanup Docker
      run: |
        # Stop all containers
        docker compose down
        
        # Remove all buildx builders
        docker buildx rm -f $(docker buildx ls -q) || true
        
        # Remove all unused volumes (except postgres_data)
        docker volume ls -q | grep -v postgres_data | xargs -r docker volume rm || true
        
        # Prune system
        docker system prune -af --volumes
        
        # Create new builder
        docker buildx create --use --name fresh-builder
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip curl
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Create env files
      run: |
        # Create the .env file for the API
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > apps/api/.env
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> apps/api/.env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> apps/api/.env
        echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> apps/api/.env
        echo "PORT=${{ secrets.PORT }}" >> apps/api/.env
        echo "ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" >> apps/api/.env
        echo "CORS_ENABLED=${{ secrets.CORS_ENABLED }}" >> apps/api/.env
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> apps/api/.env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> apps/api/.env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> apps/api/.env
        echo "GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}" >> apps/api/.env
        echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> apps/api/.env
        echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> apps/api/.env
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> apps/api/.env
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> apps/api/.env
        
        # Web Environment Variables
        echo "VITE_API_URL=http://40.67.192.108/api" > apps/web/.env
        echo "VITE_APP_NAME=Vorex" >> apps/web/.env
        
    - name: Deploy with Docker Compose
      env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
      run: |
        # Build with no-cache to ensure fresh builds
        docker compose build --no-cache --parallel
        
        # Start containers
        docker compose up -d
        
        # Wait for containers
        sleep 30
        
        # Cleanup after successful deployment
        docker system prune -af --filter "until=24h"
        
        # Check container status
        docker ps
        docker compose logs 