name: Deploy to Azure VM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Cleanup Docker
      run: |
        # Stop all containers
        docker compose down
        
        # Remove all buildx builders
        docker buildx rm -f $(docker buildx ls -q) || true
        
        # Remove all unused volumes (except postgres_data)
        docker volume ls -q | grep -v postgres_data | xargs -r docker volume rm || true
        
        # Prune system
        docker system prune -af --volumes
        
        # Create new builder
        docker buildx create --use --name fresh-builder
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip curl
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Deploy with Docker Compose
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
        PORT: ${{ secrets.PORT }}
        ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
        CORS_ENABLED: ${{ secrets.CORS_ENABLED }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        # Build with no-cache to ensure fresh builds
        docker compose build --no-cache --parallel
        
        # Start containers
        docker compose up -d
        
        # Wait for containers
        sleep 30
        
        # Cleanup after successful deployment
        docker system prune -af --filter "until=24h"
        
        # Check container status
        docker ps
        docker compose logs 