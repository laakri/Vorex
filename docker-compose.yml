version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: vorex_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d vorex_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vorex_default

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "3000:3000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - web
    networks:
      - vorex_default

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://admin:admin@postgres:5432/vorex_db?schema=public
      NODE_ENV: production
      JWT_SECRET: your-secret-key
      JWT_EXPIRES_IN: 7d
      PORT: 3000
      ALLOWED_ORIGINS: "http://48.209.80.195,http://48.209.80.195:80,http://localhost:5173"
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000"
    networks:
      - vorex_default

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: "http://48.209.80.195:3000"
    expose:
      - "80"
    depends_on:
      - api
    ports:
      - "80"
    networks:
      - vorex_default

networks:
  vorex_default:
    driver: bridge

volumes:
  postgres_data: